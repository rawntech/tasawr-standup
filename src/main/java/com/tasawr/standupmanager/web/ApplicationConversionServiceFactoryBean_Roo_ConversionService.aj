// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.tasawr.standupmanager.web;

import com.tasawr.standupmanager.domain.Project;
import com.tasawr.standupmanager.domain.Roles;
import com.tasawr.standupmanager.domain.Standup;
import com.tasawr.standupmanager.domain.Users;
import com.tasawr.standupmanager.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<Project, String> ApplicationConversionServiceFactoryBean.getProjectToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.tasawr.standupmanager.domain.Project, java.lang.String>() {
            public String convert(Project project) {
                return new StringBuilder().append(project.getName()).append(' ').append(project.getDescription()).toString();
            }
        };
    }
    
    public Converter<Long, Project> ApplicationConversionServiceFactoryBean.getIdToProjectConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.tasawr.standupmanager.domain.Project>() {
            public com.tasawr.standupmanager.domain.Project convert(java.lang.Long id) {
                return Project.findProject(id);
            }
        };
    }
    
    public Converter<String, Project> ApplicationConversionServiceFactoryBean.getStringToProjectConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.tasawr.standupmanager.domain.Project>() {
            public com.tasawr.standupmanager.domain.Project convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Project.class);
            }
        };
    }
    
    public Converter<Roles, String> ApplicationConversionServiceFactoryBean.getRolesToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.tasawr.standupmanager.domain.Roles, java.lang.String>() {
            public String convert(Roles roles) {
                return new StringBuilder().append(roles.getRoleName()).toString();
            }
        };
    }
    
    public Converter<Long, Roles> ApplicationConversionServiceFactoryBean.getIdToRolesConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.tasawr.standupmanager.domain.Roles>() {
            public com.tasawr.standupmanager.domain.Roles convert(java.lang.Long id) {
                return Roles.findRoles(id);
            }
        };
    }
    
    public Converter<String, Roles> ApplicationConversionServiceFactoryBean.getStringToRolesConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.tasawr.standupmanager.domain.Roles>() {
            public com.tasawr.standupmanager.domain.Roles convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Roles.class);
            }
        };
    }
    
    public Converter<Standup, String> ApplicationConversionServiceFactoryBean.getStandupToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.tasawr.standupmanager.domain.Standup, java.lang.String>() {
            public String convert(Standup standup) {
                return new StringBuilder().append(standup.getStandup_date()).append(' ').append(standup.getTodays_work()).append(' ').append(standup.getPrevious_work()).append(' ').append(standup.getBlocker()).toString();
            }
        };
    }
    
    public Converter<Long, Standup> ApplicationConversionServiceFactoryBean.getIdToStandupConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.tasawr.standupmanager.domain.Standup>() {
            public com.tasawr.standupmanager.domain.Standup convert(java.lang.Long id) {
                return Standup.findStandup(id);
            }
        };
    }
    
    public Converter<String, Standup> ApplicationConversionServiceFactoryBean.getStringToStandupConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.tasawr.standupmanager.domain.Standup>() {
            public com.tasawr.standupmanager.domain.Standup convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Standup.class);
            }
        };
    }
    
    public Converter<Users, String> ApplicationConversionServiceFactoryBean.getUsersToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.tasawr.standupmanager.domain.Users, java.lang.String>() {
            public String convert(Users users) {
                return new StringBuilder().append(users.getUsername()).append(' ').append(users.getPassword()).toString();
            }
        };
    }
    
    public Converter<Long, Users> ApplicationConversionServiceFactoryBean.getIdToUsersConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.tasawr.standupmanager.domain.Users>() {
            public com.tasawr.standupmanager.domain.Users convert(java.lang.Long id) {
                return Users.findUsers(id);
            }
        };
    }
    
    public Converter<String, Users> ApplicationConversionServiceFactoryBean.getStringToUsersConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.tasawr.standupmanager.domain.Users>() {
            public com.tasawr.standupmanager.domain.Users convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Users.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getProjectToStringConverter());
        registry.addConverter(getIdToProjectConverter());
        registry.addConverter(getStringToProjectConverter());
        registry.addConverter(getRolesToStringConverter());
        registry.addConverter(getIdToRolesConverter());
        registry.addConverter(getStringToRolesConverter());
        registry.addConverter(getStandupToStringConverter());
        registry.addConverter(getIdToStandupConverter());
        registry.addConverter(getStringToStandupConverter());
        registry.addConverter(getUsersToStringConverter());
        registry.addConverter(getIdToUsersConverter());
        registry.addConverter(getStringToUsersConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
